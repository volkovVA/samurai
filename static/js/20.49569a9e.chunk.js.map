{"version":3,"file":"static/js/20.49569a9e.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <span>No foto!!!</span>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img src={profile.photos.small} alt=\"avatar\" />\r\n      <p>{profile.fullName}</p>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yH3B6\"};","import React from \"react\";\nimport classes from './Post.module.css';\nimport avatar from '../../../../assets/img/avatar.jpg';\n\nconst Post = (props) => {\n  return (\n    <li className={classes.item}>\n      <img src={avatar} alt=\"avatar\" />\n      {props.message}\n      <div>{props.likesCount}</div>\n    </li>\n  )\n}\n\nexport default Post;","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport { reduxForm, Field } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = (props) => {\n  const postsElements = props.posts.map((post, idx) => (\n    <Post message={post.message} likesCount={post.likesCount} key={idx} />\n  ));\n\n  const addNewPostForm = (props) => {\n    return (\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field\n            component={Textarea}\n            name=\"newPostText\"\n            placeholder={\"Enter your post\"}\n            validate={[required, maxLength10]}\n          />\n          <button>Add post</button>\n          <button>Remove post</button>\n        </div>\n      </form>\n    );\n  };\n\n  const AddNewPostFormRedux = reduxForm({ form: \"ProfileaddNewPostForm\" })(\n    addNewPostForm\n  );\n\n  const handlerAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div>\n      <h2>my post</h2>\n      <AddNewPostFormRedux onSubmit={handlerAddPost} />\n      <ul>{postsElements}</ul>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import { addPostActionCreater } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreater(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <Row>\n      <Col>\n        <ProfileInfo\n          profile={props.profile}\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n        <MyPostsContainer />\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","src","photos","small","alt","fullName","className","classes","avatar","message","likesCount","maxLength10","maxLengthCreator","postsElements","posts","map","post","idx","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreater","MyPosts","Row","Col","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"sourceRoot":""}